{"version":3,"sources":["assets/images/earth.svg","App.js","index.js"],"names":["Weather","capital","weather","name","description","main","temp","wind","speed","Search","onChange","value","Button","onClick","Math","random","Country","country","languages","Object","keys","common","population","map","language","src","flags","png","width","height","Countries","countries","filterCountriesByButton","length","App","useState","setCountries","setCapital","filter","setFilter","filteredCountires","setFilteredCountries","filterCountries","filtered","toLowerCase","includes","setToCapital","axios","get","process","then","response","console","log","data","useEffect","class","earth","alt","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f833e57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth.6c3ce1f4.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport earth from \"./assets/images/earth.svg\";\r\nconst Weather = ({ capital }) => {\r\n  if (capital.weather)\r\n    return (\r\n      <div>\r\n        <h2>Weather in {capital.name}</h2>\r\n        <p>Description: {capital.weather[0].description} </p>\r\n        <p>Temprature: {capital.main.temp} kelvin</p>\r\n        <p>Wind: {capital.wind.speed} speed</p>\r\n      </div>\r\n    )\r\n  else return (<></>)\r\n}\r\nconst Search = ({ onChange, value }) => <input onChange={onChange} value={value} />\r\nconst Button = ({ onClick, name }) => <button key={Math.random()} onClick={onClick} value={name}>show</button>\r\nconst Country = (({ country }) => {\r\n  const languages = Object.keys(country.languages);\r\n  return (\r\n    <>\r\n      <h1>{country.name.common}</h1>\r\n      <p>Capital: {country.capital}</p>\r\n      <p>Population: {country.population}</p>\r\n      <h2>Languages</h2>\r\n      {languages.map(language => <li key={language}>{country.languages[language]}</li>)}\r\n      <h2>flag</h2>\r\n      <img src={country.flags.png} width='400px' height='200px' />\r\n    </>\r\n  )\r\n})\r\nconst Countries = (({ countries, filterCountriesByButton, capital }) => {\r\n  if (countries.length > 10)\r\n    return (\r\n      <>\r\n        <p>Too many results. Give more data</p>\r\n      </>\r\n    )\r\n  else if (countries.length === 0)\r\n    return (\r\n      <>\r\n        <p> No country by that name</p>\r\n      </>\r\n    )\r\n  else if (countries.length === 1)\r\n    return (\r\n      <>\r\n        <Country country={countries[0]} />\r\n        <Weather capital={capital} />\r\n      </>\r\n    )\r\n  else return (\r\n    <div>\r\n      {countries.map(country => {\r\n        return (<div key={country.name.common}>\r\n          <li >{country.name.common}</li>\r\n          <Button onClick={filterCountriesByButton} name={country.name.common} />\r\n        </div>)\r\n      })}\r\n    </div>\r\n  )\r\n})\r\nfunction App() {\r\n  const api_key = process.env.REACT_APP_API_KEY;\r\n  const [countries, setCountries] = useState('');\r\n  const [capital, setCapital] = useState('');\r\n  const [filter, setFilter] = useState('');\r\n  const [filteredCountires, setFilteredCountries] = useState('');\r\n  const searchBy = (e) => {\r\n    setFilter(e.target.value)\r\n    filterCountries(e.target.value)\r\n\r\n\r\n  }\r\n  const filterCountries = (name) => {\r\n    if (countries !== '') {\r\n      const filtered = countries.filter(country =>\r\n        country.name.common\r\n          .toLowerCase()\r\n          .includes(name.toLowerCase()))\r\n      setFilteredCountries(filtered)\r\n      setToCapital(filtered);\r\n    }\r\n    else\r\n      return;\r\n  }\r\n\r\n  const filterCountriesByButton = (e) => {\r\n    const filtered = countries.filter(country =>\r\n      country.name.common.toLowerCase() === e.target.value.toLowerCase())\r\n    setFilteredCountries(filtered)\r\n    setToCapital(filtered);\r\n  }\r\n\r\n  const setToCapital = (filtered) => {\r\n    if (filtered.length === 1) {\r\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${filtered[0].capital}&appid=${api_key}`)\r\n        .then(response => {\r\n          console.log(response.data)\r\n          setCapital(response.data)\r\n        })\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://restcountries.com/v3.1/all')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCountries(response.data);\r\n      })\r\n  }, [])\r\n  return (\r\n    <div class=\"container\">\r\n      <div class=\"header\">\r\n        <div class=\"logo\">\r\n          <img src={earth} alt=\"earth logo\" />\r\n          Countries\r\n        </div>\r\n        <div class=\"search\">\r\n          Search By: <Search onChange={searchBy} value={filter} />\r\n        </div>\r\n      </div>\r\n      <div class=\"content\">\r\n        <Countries countries={filteredCountires} filterCountriesByButton={filterCountriesByButton} capital={capital} />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\"\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}